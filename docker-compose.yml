services:
  nginx:
    image: nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./site-templates:/usr/share/nginx/html:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 3s
      retries: 3
    depends_on:
      - n8n
      - chrome

  certbot:
    image: certbot/certbot
    restart: "no"
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  n8n:
    image: n8nio/n8n
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=change_me
      - N8N_ENV=production
    volumes:
      - ./data/n8n:/home/node/.n8n
  # Supabase Services
  supabase-db:
    image: supabase/postgres:15.8.1.060
    restart: unless-stopped
    user: "${UID:-1000}:${GID:-1000}"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST=/var/run/postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=${SUPABASE_PASSWORD}
      - POSTGRES_DB=postgres
      - JWT_SECRET=${SUPABASE_JWT_SECRET}
      - JWT_EXP=3600
      - SUPABASE_AUTH_ADMIN_PASSWORD=${SUPABASE_PASSWORD}
      - AUTHENTICATOR_PASSWORD=${SUPABASE_PASSWORD}
    volumes:
      - ./data/supabase:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
      - "-c"
      - "log_min_messages=fatal"

  supabase-studio:
    image: supabase/studio:2025.06.30-sha-6f5982d
    restart: unless-stopped
    ports:
      - "3001:3000"
    depends_on:
      supabase-db:
        condition: service_healthy
      supabase-meta:
        condition: service_started
    environment:
      - STUDIO_PG_META_URL=http://supabase-meta:8080
      - POSTGRES_PASSWORD=${SUPABASE_PASSWORD}
      - DEFAULT_ORGANIZATION_NAME=JStack Organization
      - DEFAULT_PROJECT_NAME=JStack Project
      - SUPABASE_URL=http://supabase-kong:8000
      - SUPABASE_PUBLIC_URL=http://localhost:8000
      - ANON_KEY=${SUPABASE_ANON_KEY}
      - SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - AUTH_JWT_SECRET=${SUPABASE_JWT_SECRET}

  supabase-kong:
    image: kong:2.8.1
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "8001:8443"
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/home/kong/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=request-transformer,cors,key-auth,acl,basic-auth
      - KONG_NGINX_PROXY_PROXY_BUFFER_SIZE=160k
      - KONG_NGINX_PROXY_PROXY_BUFFERS=64 160k
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    entrypoint: |
      bash -c '
      cat > /home/kong/kong.yml <<EOF
      _format_version: "1.1"
      _transform: true
      
      consumers:
        - username: anon
          keyauth_credentials:
            - key: ${SUPABASE_ANON_KEY}
        - username: service_role
          keyauth_credentials:
            - key: ${SUPABASE_SERVICE_KEY}
      
      acls:
        - consumer: anon
          group: anon
        - consumer: service_role
          group: admin
      
      services:
        - name: auth-v1-open
          url: http://supabase-auth:9999/verify
          routes:
            - name: auth-v1-open
              strip_path: true
              paths:
                - "/auth/v1/verify"
        - name: auth-v1
          _comment: "GoTrue: /auth/v1/* -> http://supabase-auth:9999/*"
          url: http://supabase-auth:9999/
          routes:
            - name: auth-v1-all
              strip_path: true
              paths:
                - "/auth/v1/"
          plugins:
            - name: cors
        - name: rest-v1
          _comment: "PostgREST: /rest/v1/* -> http://supabase-rest:3000/*"
          url: http://supabase-rest:3000/
          routes:
            - name: rest-v1-all
              strip_path: true
              paths:
                - "/rest/v1/"
          plugins:
            - name: cors
            - name: key-auth
              config:
                hide_credentials: false
            - name: acl
              config:
                hide_groups_header: true
                allow:
                  - admin
                  - anon
      EOF
      /docker-entrypoint.sh kong docker-start'

  supabase-auth:
    image: supabase/gotrue:v2.177.0
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - API_EXTERNAL_URL=http://localhost:8000
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgres://supabase_auth_admin:${SUPABASE_PASSWORD}@supabase-db:5432/postgres
      - GOTRUE_SITE_URL=http://localhost:3000
      - GOTRUE_URI_ALLOW_LIST=
      - GOTRUE_DISABLE_SIGNUP=false
      - GOTRUE_JWT_ADMIN_ROLES=service_role
      - GOTRUE_JWT_AUD=authenticated
      - GOTRUE_JWT_DEFAULT_GROUP_NAME=authenticated
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - GOTRUE_EXTERNAL_EMAIL_ENABLED=true
      - GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED=false
      - GOTRUE_MAILER_AUTOCONFIRM=true
      - GOTRUE_SMTP_ADMIN_EMAIL=${EMAIL:-admin@example.com}
      - GOTRUE_SMTP_HOST=
      - GOTRUE_SMTP_PORT=587
      - GOTRUE_SMTP_USER=
      - GOTRUE_SMTP_PASS=
      - GOTRUE_SMTP_SENDER_NAME=
      - GOTRUE_MAILER_URLPATHS_INVITE=/auth/v1/verify
      - GOTRUE_MAILER_URLPATHS_CONFIRMATION=/auth/v1/verify
      - GOTRUE_MAILER_URLPATHS_RECOVERY=/auth/v1/verify
      - GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE=/auth/v1/verify
      - GOTRUE_EXTERNAL_PHONE_ENABLED=false
      - GOTRUE_SMS_AUTOCONFIRM=true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9999/health"]
      timeout: 5s
      interval: 5s
      retries: 3

  supabase-rest:
    image: postgrest/postgrest:v12.2.12
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      - PGRST_DB_URI=postgres://authenticator:${SUPABASE_PASSWORD}@supabase-db:5432/postgres
      - PGRST_DB_SCHEMAS=public,storage,graphql_public
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - PGRST_DB_USE_LEGACY_GUCS=false
      - PGRST_APP_SETTINGS_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - PGRST_APP_SETTINGS_JWT_EXP=3600
    command: ["postgrest"]

  supabase-meta:
    image: supabase/postgres-meta:v0.91.0
    restart: unless-stopped
    depends_on:
      supabase-db:
        condition: service_healthy
    environment:
      - PG_META_PORT=8080
      - PG_META_DB_HOST=supabase-db
      - PG_META_DB_PORT=5432
      - PG_META_DB_NAME=postgres
      - PG_META_DB_USER=supabase_admin
      - PG_META_DB_PASSWORD=${SUPABASE_PASSWORD}
  chrome:
    image: browserless/chrome
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - "3000:3000"
    volumes:
      - ./data/chrome:/data
